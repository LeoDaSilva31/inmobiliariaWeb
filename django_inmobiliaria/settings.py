# Q:\new\django_inmobiliaria\settings.py

"""
Django settings for django_inmobiliaria project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os # Sigue siendo útil para os.path.join, aunque Path sea dominante
from pathlib import Path # Para manejar rutas de forma moderna y orientada a objetos
from dotenv import load_dotenv
import environ


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR: Esta línea es CORRECTA para tu estructura.
# Si tu manage.py está en /q/new/ y tu settings.py está en /q/new/django_inmobiliaria/settings.py,
# entonces Path(__file__).resolve() es el path absoluto del archivo settings.py.
# .parent.parent sube dos niveles:
# 1. /q/new/django_inmobiliaria/
# 2. /q/new/ (¡Esta es la raíz de tu proyecto donde están manage.py, venv, static, media, templates!)
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECRET_KEY: Clave secreta para la seguridad de Django.
# ¡IMPORTANTE! NUNCA uses esta clave directamente en producción.
# Debe ser una variable de entorno o cargada de un archivo externo.
env = environ.Env()
environ.Env.read_env()
SECRET_KEY = env('SECRET_KEY')

# DEBUG: Activa el modo de depuración.
# ¡IMPORTANTE! Debe ser False en producción para evitar fugas de información sensible
# y mejorar la seguridad.
DEBUG = False

# ALLOWED_HOSTS: Lista de host/nombres de dominio que pueden servir tu Django.
# En desarrollo, con DEBUG=True, [] permite todas las conexiones.
# En producción, debes listar los dominios de tu sitio web (ej: ['www.tuinmobiliaria.com', 'tuinmobiliaria.com']).
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=[])





# Application definition

# INSTALLED_APPS: Lista de aplicaciones de Django que están activas en este proyecto.
# Las primeras son las apps predeterminadas de Django.
INSTALLED_APPS = [
    'django.contrib.admin', # Panel de administración de Django
    'django.contrib.auth', # Sistema de autenticación
    'django.contrib.contenttypes', # Tipos de contenido para modelos
    'django.contrib.sessions', # Manejo de sesiones
    'django.contrib.messages', # Framework de mensajes (notificaciones al usuario)
    'django.contrib.staticfiles', # Gestión de archivos estáticos (CSS, JS, imágenes)
    'django.contrib.humanize',

    # Apps propias: Aquí registras las aplicaciones que tú creas.
    'web_app', # Tu aplicación principal que contiene modelos, vistas, etc.
]

# MIDDLEWARE: Capas de procesamiento que se ejecutan durante cada solicitud/respuesta.
# Se ejecutan en el orden en que se listan.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware', # Para encabezados de seguridad HTTP
    'django.contrib.sessions.middleware.SessionMiddleware', # Habilita las sesiones
    'django.middleware.common.CommonMiddleware', # Para URL rewriting, añadir / a URLs, etc.
    'django.middleware.csrf.CsrfViewMiddleware', # Protección contra Cross Site Request Forgery
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Asocia usuarios a las peticiones
    'django.contrib.messages.middleware.MessageMiddleware', # Permite el uso del framework de mensajes
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # Protección contra clickjacking
]

# ROOT_URLCONF: Especifica el módulo Python donde Django buscará las URLs principales del proyecto.
ROOT_URLCONF = 'django_inmobiliaria.urls'

# TEMPLATES: Configuración para el motor de plantillas de Django.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        'DIRS': [BASE_DIR / 'templates'],  
        'APP_DIRS': True,  
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'web_app.context_processors.emailjs_keys',
            ],
        },
    },
]

# WSGI_APPLICATION: La aplicación WSGI para tu servidor web.
WSGI_APPLICATION = 'django_inmobiliaria.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # NAME: La ruta al archivo de la base de datos SQLite.
        # BASE_DIR / 'db.sqlite3' apunta a /q/new/db.sqlite3
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-ar' # CAMBIO SUGERIDO: De 'en-us' a 'es-ar' para español de Argentina
TIME_ZONE = 'America/Argentina/Buenos_Aires' # CAMBIO SUGERIDO: Zona horaria a Buenos Aires
USE_I18N = True # Habilita la internacionalización (soporte para diferentes idiomas)
USE_TZ = True # Habilita zonas horarias conscientes (recomendado)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# --- ¡DUPLICADO! Esta línea se repite. La que sigue es la correcta y más detallada.
# STATIC_URL = 'static/' 
# ---

# STATIC_URL: La URL base para servir archivos estáticos.
# Cuando uses {% static 'path/to/file.css' %}, Django lo convertirá a /static/path/to/file.css
STATIC_URL = 'static/'

# STATICFILES_DIRS: Una lista de directorios adicionales donde Django buscará archivos estáticos.
# Esto es para tus archivos estáticos personalizados que no pertenecen a ninguna app específica.
# BASE_DIR / 'static' apunta a /q/new/static/
STATICFILES_DIRS = [
    BASE_DIR / 'static', # CORREGIDO: Usar Path object para concatenación
]

# STATIC_ROOT: La ruta ABSOLUTA donde collectstatic recolectará todos los archivos estáticos.
# Esto solo se usa en PRODUCCIÓN cuando ejecutas `python manage.py collectstatic`.
# En desarrollo, Django sirve los archivos directamente desde STATICFILES_DIRS y las carpetas static/ de las apps.
# No es necesario descomentar en desarrollo, pero es buena práctica tenerlo definido.
# STATIC_ROOT = BASE_DIR / 'staticfiles'


# Configuración de MEDIA FILES (imágenes subidas por los usuarios/admin)
# MEDIA_URL: La URL base para servir archivos de media (subidos por los usuarios, como imágenes de propiedades).
# Cuando una imagen de propiedad tenga una URL, comenzará con /media/
MEDIA_URL = '/media/' # CORRECTO: Debe terminar en barra '/'

# MEDIA_ROOT: La ruta ABSOLUTA del sistema de archivos donde Django guardará los archivos de media.
# Aquí es donde se almacenarán físicamente las imágenes de propiedades que subas.
# BASE_DIR / 'media' apunta a /q/new/media/
MEDIA_ROOT = BASE_DIR / 'media' # CORREGIDO: Usar Path object para concatenación


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Cargar variables de entorno del archivo .env
load_dotenv(os.path.join(BASE_DIR, '.env'))

import environ

env = environ.Env()
environ.Env.read_env()

FORMSUBMIT_EMAIL = env("FORMSUBMIT_EMAIL")
FORMSUBMIT_NEXT = env("FORMSUBMIT_NEXT")

# Variables EmailJS
EMAILJS_PUBLIC_KEY = env("EMAILJS_PUBLIC_KEY")
EMAILJS_SERVICE_ID = env("EMAILJS_SERVICE_ID") 
EMAILJS_TEMPLATE_ID = env("EMAILJS_TEMPLATE_ID")